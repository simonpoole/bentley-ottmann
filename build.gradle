
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.breadmoirai:github-release:2.5.2"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: "com.github.breadmoirai.github-release"

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    compileOnly 'org.jetbrains:annotations:19.0.0'
    // 
    testImplementation 'junit:junit:4.13'
    testCompileOnly 'org.jetbrains:annotations:19.0.0'
}

group = 'ch.poole.misc'
version = '0.1.1'
sourceCompatibility = '1.8'

ext {
    repoUrl = 'https://github.com/simonpoole/bentley-ottmann.git'
    spdxId = 'Apache-2.0'
    githubToken = System.getenv('GITHUB_TOKEN')
}

publishing {
    publications {
        Release(MavenPublication) {
            from components.java
            groupId group
            artifactId 'bentley-ottmann'
            pom {
                name = artifactId
                description = 'Java implementation of Bentley-Ottmann algorithm'
                url = 'https://github.com/simonpoole/bentley-ottmann'
                scm {
                    url = repoUrl
                }
                licenses {
                    license {
                        name = spdxId
                        url = 'https://github.com/simonpoole/bentley-ottmann/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        name = 'Stanislav Antonov'
                    }
                    developer {
                        name = 'Simon Poole'
                    }
                }
            }
            repositories {
                maven {
                    name = 'sonatype'
                    credentials {
                        username System.getenv('SONATYPE_USER')
                        password System.getenv('SONATYPE_PASSWORD')
                    }
                    def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}

signing {
    sign publishing.publications.Release
}

githubRelease {
    token project.ext.githubToken == null ? "" : project.ext.githubToken    
    owner = "simonpoole"
    tagName = project.version
    releaseName = project.version
    targetCommitish = "master" 
    generateReleaseNotes = true 
    overwrite = true
}

afterEvaluate {
    publishReleasePublicationToSonatypeRepository.dependsOn tasks.githubRelease
}